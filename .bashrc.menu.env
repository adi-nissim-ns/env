#!/bin/bash
#https://wiki.nextsilicon.com/wiki/software/software-bringup/utils-toolchain-install

function stage1_clone_nextutils() {
  echo_running "clone nextutils..."
  cdsw
  run_command pwd
  # Check if directory exists
  if [ ! -d "$NEXTUTILS" ]; then
    echo_info "Directory $NEXTUTILS does not exist. cloning it..."
    cdsw
    run_command git clone --recurse-submodules git@github.com:nextsilicon/nextutils.git
  else    
    echo_warning "Directory $NEXTUTILS exists. Do nothing."
  fi
}

function stage2_setup_nextutils() {
  echo_running "Setting up nextutils..."
  cdutils
  run_command pwd
  # Check if directory exists
  if [ ! -d "$NEXTUTILS" ]; then
    echo_error "Directory $HOME/nextutils does not exist."
    echo_info "You can run 'stage1_clone_nextutils' to clone it."
  else
    echo_running "Directory $NEXTUTILS exists. Proceeding with setup..."
    run_command cd $NEXTUTILS
    # echo "Running: ./setup.sh --fetch-all --create-buildtools-venv"
    run_command ./setup.sh --fetch-all --create-buildtools-venv && echo "[OK] nextutils setup complete."
  fi
}
function stage3_build_nextutils() {
  echo_running "Building nextutils..."
  cdsw
  run_command pwd
  # Check if directory exists
  if [ ! -d "$NEXTUTILS" ]; then
    echo_error "Directory $HOME/nextutils does not exist."
    echo_info "step1: run 'stage1_clone_nextutils'"
    echo_info "step2: run 'stage2_setup_nextutils'"
  else
    echo_running "Directory $NEXTUTILS exists. Proceeding with build..."
    run_command cd $NEXTUTILS
    run_command pwd
    # echo "Running: ./build.sh --install"
    activate_python_env
    run_command ./build.sh --install && echo "[OK] nextutils build complete."
  fi
}

function menu-env() {
  echo ""
  echo "====================env_menu===================="
  echo "0. Exit"
  echo "1. back to main menu"
  echo "2. step1: clone nextutils"
  echo "3. step2: setup nextutils"
  echo "4. step3: build & install nextutils"
#  echo "5. step4: download most updated config : ${NEXT_HOME}/etc/next_runtime.conf"
  echo "=====================env_menu===================="
  
  read -p "Select an option: " option
  case $option in
    0)
      echo "Exiting..."
      return 0
      ;;
    1)
      menu
      ;;
    2)
      stage1_clone_nextutils
      ;;
    3)
      stage2_setup_nextutils
      ;;
    4)
      stage3_build_nextutils
      ;;
    5)
      cdutils
      run_command pwd
      run_command ./setup.sh --install-cfg-files --randomize-ports
      ;;
    *)
      echo "Invalid option. Please try again."
      menu
      ;;
  esac
}

echo_info "loading menu-env ..."
