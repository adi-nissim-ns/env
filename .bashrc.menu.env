#!/bin/bash
#https://wiki.nextsilicon.com/wiki/software/software-bringup/utils-toolchain-install

function stage1_clone_nextutils() {
  echo "clone nextutils..."
  cdsw
  # Check if directory exists
  if [ ! -d "$NEXTUTILS" ]; then
    echo "Directory $NEXTUTILS does not exist. cloning it..."
    cdsw
    git clone --recurse-submodules git@github.com:nextsilicon/nextutils.git
  fi
  
  echo "nextutils clone complete."
}
function stage2_setup_nextutils() {
  echo "Setting up nextutils..."
  cdutils
  # Check if directory exists
  if [ ! -d "$NEXTUTILS" ]; then
    echo "Directory $HOME/nextutils does not exist."
    echo "Please clone it first."
  else
    echo "Directory $NEXTUTILS exists. Proceeding with setup..."
    cd $NEXTUTILS
    echo "Running: ./setup.sh --fetch-all --create-buildtools-venv"
    ./setup.sh --fetch-all --create-buildtools-venv && echo "[OK] nextutils setup complete."
  fi
}
function stage3_build_nextutils() {
  echo "Building nextutils..."
  cdsw
  # Check if directory exists
  if [ ! -d "$NEXTUTILS" ]; then
    echo "Directory $HOME/nextutils does not exist."
    echo "Please clone it first."
  else
    echo "Directory $NEXTUTILS exists. Proceeding with build..."
    cd $NEXTUTILS
    pwd
    echo "Running: ./build.sh --install"
    activate_python_env
    ./build.sh --install && echo "[OK] nextutils build complete."
  fi
}

function menu-env() {
  echo ""
  echo "====================env_menu===================="
  echo "0. Exit"
  echo "1. back to main menu"
  echo "2. step1: clone nextutils"
  echo "3. step2: setup nextutils"
  echo "4. step3: build & install nextutils"
  echo "5. step4: download most updated config : ${NEXT_HOME}/etc/next_runtime.conf"
  echo "=====================env_menu===================="
  
  read -p "Select an option: " option
  case $option in
    0)
      echo "Exiting..."
      return 0
      ;;
    1)
      menu
      ;;
    2)
      stage1_clone_nextutils
      ;;
    3)
      stage2_setup_nextutils
      ;;
    4)
      stage3_build_nextutils
      ;;
    5)
      cdutils
      pwd
      echo "Running: ./setup.sh --install-cfg-files --randomize-ports"
      ./setup.sh --install-cfg-files --randomize-ports && echo "[OK] config file dowloaded."
      ;;
    *)
      echo "Invalid option. Please try again."
      menu
      ;;
  esac
}

echo_info "loading menu-env ..."